package dk.dtu.ai.blueducks.merge;

import java.io.FileNotFoundException;
import java.io.PrintWriter;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;

public class PlanMergeOptionsGenerator {

	List<boolean[]> results;

	private List<boolean[]> generateAll(int size) {
		results = new LinkedList<boolean[]>();
		for (int level = 0; level < size; level++)
			generateLevel(level, size);
		return results;
	}

	private void generateLevel(int level, int size) {
		generateOptions(new boolean[size], 0, level);
	}

	private void generateOptions(boolean[] option, int currentIndex, int level) {
		// System.out.println(currentIndex + "|" + level + ":" + Arrays.toString(option));
		// Generate with true and check if it's valid
		option[currentIndex] = true;
		if (option.length == currentIndex + 1) {
			if (isOptionValid(option, level)) {
				foundOption(option);
				return;
			}
		} else {
			generateOptions(option, currentIndex + 1, level);
		}

		// Generate with true and check if it's valid
		option[currentIndex] = false;
		if (option.length == currentIndex + 1) {
			if (isOptionValid(option, level)) {
				foundOption(option);
				return;
			}
		} else
			generateOptions(option, currentIndex + 1, level);

	}

	private void foundOption(boolean[] option) {
		results.add(Arrays.copyOf(option, option.length));
	}

	private boolean isOptionValid(boolean[] option, int level) {
		int count = 0;
		for (boolean b : option)
			if (!b)
				count++;
		if (count != level)
			return false;
		else
			return true;
	}

	private static String formatArray(int arrayIndex, List<boolean[]> results) {
		StringBuilder res = new StringBuilder();
		res.append("\t\tOPTIONS[" + arrayIndex + "] = ").append("new boolean[][] {\n");
		for (boolean[] o : results)
			res.append("\t\t\t\t").append(Arrays.toString(o).replace('[', '{').replace(']', '}'))
					.append(",\n");
		res.delete(res.length() - 2, res.length());
		res.append(" };\n");
		return res.toString();
	}

	public static void main(String[] args) throws FileNotFoundException {
		PrintWriter out = new PrintWriter("src/dk/dtu/ai/blueducks/merge/PlanMergeOptions.java");
		final int AGENTS_COUNT = 10;
		// Print file header
		out.println("package dk.dtu.ai.blueducks.merge;\n");
		out.println("/* AUTOGENERATED */");
		out.println("public class PlanMergeOptions {");
		out.println("\tpublic static final boolean[][][] OPTIONS;");
		out.println("\n\tstatic {");
		out.println("\t\tOPTIONS=new boolean[" + AGENTS_COUNT + "][][];\n");

		// Print data loading
		for (int agents = 1; agents <= AGENTS_COUNT; agents++)
			out.println(PlanMergeOptionsGenerator.formatArray(agents-1,
					new PlanMergeOptionsGenerator().generateAll(agents)));

		// Print file footer
		out.println("\t}\n}");
		out.close();
	}

}
